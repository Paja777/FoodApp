{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abc\\\\Desktop\\\\React\\\\Food app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n      if (existingItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n        const updatedItem = {\n          ...existingItem,\n          amount: existingItem.amount - action.item.amount\n        };\n      }\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispachCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispachCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCart = id => {\n    dispachCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"kSvHhLzRdRsBnGtdsjmWFWzlq4g=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","_s","cartState","dispachCartAction","addItemToCartHandler","removeItemFromCart","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abc/Desktop/React/Food app/src/store/CartProvider.js"],"sourcesContent":["import {useReducer} from 'react';\r\n\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) =>{\r\n    if(action.type === 'ADD'){\r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    \r\n    const existingCartItemIndex = state.items.findIndex(\r\n        (item)=> item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n    if(existingCartItem){\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }else{\r\n\r\n        updatedItems = state.items.concat(action.item);\r\n    }\r\n    if(action.type === 'REMOVE'){\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item)=> item.id === action.id\r\n        );        \r\n      const existingItem = state.items[existingCartItemIndex];\r\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n      let updatedItems;\r\n\r\n      if(existingItem.amount === 1){\r\n       updatedItems = state.items.filter(item => item.id !== action.id);\r\n      }else{\r\n          const updatedItem = {\r\n              ...existingItem,\r\n              amount: existingItem.amount - action.item.amount\r\n            }\r\n\r\n        }\r\n      \r\n    }\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount\r\n      };\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props =>{\r\n const [cartState, dispachCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispachCartAction({type: 'ADD', item: item});\r\n    };\r\n\r\n    const removeItemFromCart = id => {\r\n        dispachCartAction({type: 'REMOVE', id: id}); \r\n    };\r\n\r\n   const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCart\r\n   };\r\n\r\n   return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n   );\r\n};\r\n\r\nexport default CartProvider; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}